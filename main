#!/usr/bin/env node
/*jslint node: true */

// All global variables here. {{{
// No further clobbering of the global object.
var optimist, argv,
    http, server;
// }}}

// Requires {{{
optimist = require('optimist');
http     = require('http');
// }}}

// Argument handling {{{
argv = optimist
    .usage('LUnix web server.\nUsage: $0')
    .options({
        'u': {
            alias:   'user',
            default: 'node'
        },
        'g': {
            alias:   'group',
            default: 'nogroup'
        },
        'l': {
            alias:   'listen',
            default: 'localhost'
        },
        'p': {
            alias:   'port',
            default: 8080
        },
        'h': {
            alias:   'help'
        }
    })
    .argv;

if (argv.help) {
    optimist.showHelp();
    process.exit(0);
}

// }}}

// Drop privileges {{{
if (process.getuid() === 0 && argv.user) {
    process.stdout.write('Dropping privileges to '
        + argv.user
        + ':'
        + argv.group
        + '... ');

    try {
        process.setgid(argv.group);
        process.setuid(argv.user);
    } catch (e) {
        process.stderr.write('Failed: ' + e.message + '\n');
        process.exit(1);
    }

    process.stdout.write('ok.\n');
}
// }}}

// Signal handling  {{{

process.on('SIGINT', function () {
    'use strict';
    process.stdout.write('SIGINT cought. Exiting...\n');
    process.exit(0);
});

process.on('SIGTERM', function () {
    'use strict';
    process.stdout.write('SIGTERM cought. Exiting...\n');
    process.exit(0);
});

// }}}

// create server {{{
server = {};
server.server = new http.Server();
server.route = require('./router.js');


server.server.on('request', function (request, response) {
    'use strict';
    process.stdout.write('Processing request \'' + request.url + '\'... ');
    server.route(request, response);
});

process.stdout.write('Listening on host '
    + argv.listen
    + ', port '
    + argv.port
    + '... ');

server.server.listen(argv.port, argv.host);

process.stdout.write('ok.\n');

// }}}

// vim: filetype=javascript
